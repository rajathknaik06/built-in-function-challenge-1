""" Jake is learning about prime factorization and wants to create a Python utility using user-defined modules. He plans to implement a module named prime_factorization.py that defines a class PrimeFactorizer to perform prime factorization. Another script, main.py, will import this module, take user input, and display the prime factors. 



Write a program to assist Jake in completing this task.

Input format :
The input consists of a single integer n.

Output format :
The output prints a single line containing a list of integers representing the prime factors of n."""


#main.py
from prime_factorization import PrimeFactorizer

def main():
    # Get the input from user
    user_input = input()

    # Check if the input is a valid integer
    if user_input.isdigit():
        n = int(user_input)

        # Create an object of PrimeFactorizer with the given number
        prime_factorizer = PrimeFactorizer(n)

        # Get the prime factors
        factors = prime_factorizer.factorize()

        # Display the prime factors
        print(factors)

    else:
        print("Please enter a valid integer.")

if __name__ == "__main__":
    main()




#prime factorization.py
# prime_factorization.py

class PrimeFactorizer:
    def __init__(self, number):
        self.number = number

    def factorize(self):
        n = self.number
        factors = []

        # Check for 2 as a factor
        while n % 2 == 0:
            factors.append(2)
            n = n // 2

        # Check for odd factors starting from 3 up to sqrt(n)
        for i in range(3, int(n**0.5) + 1, 2):
            while n % i == 0:
                factors.append(i)
                n = n // i

        # If n is a prime number greater than 2
        if n > 2:
            factors.append(n)

        return factors
